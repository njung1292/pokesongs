#!/usr/bin/env node
var debug = require('debug')('appname');
var app = require('../app');
app.set('port', port);
var http = require('http').Server(app);
var io = require('socket.io')(http)
var scraper = require('./scraper.js');

// Parameters for YQL query in scraper.js
var baseUrl = 'http://www.brawlcustommusic.com';
var xpath = '//td/a';

var port = process.env.PORT || 5000;

// Socket connection for Twitter typeahead suggestion engine
var suggest = io
    .of('/suggest')
    .on('connection', function (socket) {
        console.log('connected to suggest.js');
        // Immediately query for the list of games
        tryQuery(baseUrl + "/gamelist", [], socket);
    });

// Socket connection for sending the song list to the frontend utils
var utils = io
    .of('/utils')
    .on('connection', function (socket) {
        console.log('connected to utils.js');
        // Listen for game messages from utils.js
        socket.on('game', function (game){
            // Query for the songlist
            tryQuery(baseUrl + game, [], socket);
        });
    });

// Attempts queries for data until results are non-empty.
// Emits the results to socket.
function tryQuery(url, results, socket) {
    if (results.length == 0) {
        // Try the query again
        console.log("Attempting query:", url);
        scraper.makeQuery(url, xpath, function (a) {
            return tryQuery(url, a, socket);
        });
    } else {
        // Emit the results
        return socket.emit('data', results);
    }
}

http.listen(port, function() {
    console.log('listening on *:' + port);
});
